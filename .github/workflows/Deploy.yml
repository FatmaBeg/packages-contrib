name: Deployment

on:
  push:
    branches: [ master ]

jobs:
  Build:
    runs-on: ${{ matrix.os }}
    strategy:
     matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
    - uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.16
        
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'
     
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'

    - name: Install dependencies
      run: |
       python -m pip install --upgrade pip
       pip install build
       pip install pyinstaller
       pip install pipreqs
       pip install opencv-python==4.5.3.56
       pip install robomotion==1.5.6

   #Java Packages Environment
   
    - name: Get jutil and add to path
      if: runner.os != 'Windows' 
      run: |
       git clone https://github.com/hasanhg/jutil.git && cd jutil && go build
       
    - name: Add jutil to path
      if: runner.os != 'Windows'
      run: | 
       cp jutil/jutil /usr/local/bin
       cd /usr/local/bin && chmod +x jutil 
       echo "usr/local/bin" >> $GITHUB_PATH
       
    - name: Get jutil and add to path
      if: runner.os == 'Windows' 
      run: |
       git clone https://github.com/hasanhg/jutil.git && cd jutil && go build && mv jutil.exe ../
       
    - name: Get jar
      run: curl -O -L https://storage.googleapis.com/rohat-repository/robomotion-1.4.4.jar
    
    - name: mvn install
      run: mvn install:install-file -Dfile="./robomotion-1.4.4.jar" -DgroupId="com.robomotion.app" -DartifactId="robomotion" -Dversion="1.4.4" -Dpackaging="jar"
      
    - name: Get jdk
      if: runner.os == 'Windows'
      run: curl -O -L https://github.com/AdoptOpenJDK/openjdk11-binaries/releases/download/jdk-11.0.11%2B9/OpenJDK11U-jre_x64_windows_hotspot_11.0.11_9.zip
 
    - name: Get jdk
      if: runner.os == 'Linux'
      run: curl -O -L https://github.com/AdoptOpenJDK/openjdk11-binaries/releases/download/jdk-11.0.11%2B9/OpenJDK11U-jre_x64_linux_hotspot_11.0.11_9.tar.gz
 
    - name: Get jdk
      if: runner.os == 'macOS'
      run: curl -O -L https://github.com/AdoptOpenJDK/openjdk11-binaries/releases/download/jdk-11.0.11%2B9/OpenJDK11U-jre_x64_mac_hotspot_11.0.11_9.tar.gz
      
    - name: Delete unnecessary directory
      if: runner.os == 'Windows'
      run: rd /s /q ".\jutil"
      shell: cmd
      
    - name: Delete unnecessary directory
      if: runner.os != 'Windows'
      run:  rm -r jutil/
 
   #End of Java Packages Environment
   
    - name: rclone and roboctl for linux
      if: runner.os == 'Linux'
      run: |
       curl -O -L https://packages.robomotion.io/releases/roboctl/roboctl-v1.0.0-linux-amd64.tar.gz
       tar -xvzf ./roboctl-v1.0.0-linux-amd64.tar.gz
       curl https://rclone.org/install.sh | sudo bash
       mkdir /home/runner/.config/rclone
  
    - name: rclone and roboctl for mac
      if: runner.os == 'macOS'
      run: |
       curl -O -L https://packages.robomotion.io/releases/roboctl/roboctl-v1.0.0-darwin-amd64.tar.gz
       tar -xvzf ./roboctl-v1.0.0-darwin-amd64.tar.gz
       brew install rclone
       mkdir /Users/runner/.config/rclone

    - name: rclone and roboctl for windows
      if: runner.os == 'Windows'
      run: |
       C:\msys64\usr\bin\wget.exe https://packages.robomotion.io/releases/roboctl/roboctl-v1.0.0-windows-amd64.tar.gz
       tar -xvzf .\roboctl-v1.0.0-windows-amd64.tar.gz
       C:\msys64\usr\bin\wget.exe https://downloads.rclone.org/v1.57.0/rclone-v1.57.0-windows-amd64.zip && unzip rclone-v1.57.0-windows-amd64.zip && move .\rclone-v1.57.0-windows-amd64\rclone.exe .
       mkdir C:/Users/runneradmin/AppData/Roaming/rclone
       
    - name: Add to the path for windows
      if: runner.os == 'Windows'
      run: |
          echo "::add-path::${env:GITHUB_WORKSPACE}"
      env:
        ACTIONS_ALLOW_UNSECURE_COMMANDS: 'true' 
        
    - name: Add rclone.conf for windows
      if: runner.os == 'Windows' 
      run: 'echo "$CONF" >  C:/Users/runneradmin/AppData/Roaming/rclone/rclone.conf'
      shell: bash
      env:
        CONF: ${{secrets.RCLONE_CONF}}
        
    - name: Add rclone.conf for mac
      if: runner.os == 'macOS' 
      run: 'echo "$CONF" >  /Users/runner/.config/rclone/rclone.conf'
      shell: bash
      env:
        CONF: ${{secrets.RCLONE_CONF}}
        
    - name: Add rclone.conf for linux
      if: runner.os == 'Linux'
      run: 'echo "$CONF" >  /home/runner/.config/rclone/rclone.conf'
      shell: bash
      env:
        CONF: ${{secrets.RCLONE_CONF}}

        
    - name: rclone Get index.json from DO for Windows 
      if: runner.os == 'Windows'
      run: rclone copy -P DO:robomotion-packages/contrib/index.json .
      
    - name: rclone Get index.json from DO for Mac and Linux
      if: runner.os == 'macOS' || runner.os == 'Linux'
      run: rclone copy -P DO:robomotion-packages/contrib/index.json .
             
       
    - name: roboctl and permission for linux mac
      if: runner.os == 'macOS' || runner.os == 'Linux' 
      run: |
       cp roboctl /usr/local/bin
       cd /usr/local/bin && chmod +x roboctl 
       echo "usr/local/bin" >> $GITHUB_PATH
       
    - name: mkdir repo
      run: mkdir repo
     
    - name: Directory permission for linux
      if: runner.os == 'Linux'
      run: sudo chmod 777 -R  /home/runner/work/packages-contrib/packages-contrib/repo
      
    - name: Packaging
      run: go run ./build.go 
      env:
          PASSWORD: ${{ secrets.MAIL_PASSWORD }}
          MAIL: ${{ secrets.MAIL_USERNAME }}
          RUNNEROS: ${{ runner.os }}
        
    - name: rclone mono package windows   
      if: runner.os == 'Windows'
      run: rclone copy -P --s3-acl=public-read ./repo DO:robomotion-packages/contrib/
      
    - name: rclone mono package mac and linux   
      if: runner.os == 'macOS' || runner.os == 'Linux'
      run: rclone copy -P --s3-acl=public-read ./repo DO:robomotion-packages/contrib/
 
  Deploy:
    needs: Build
    runs-on: ubuntu-latest
    steps: 
    - uses: actions/checkout@v2

    - name: rclone and roboctl for linux
      run: |
       curl -O -L https://packages.robomotion.io/releases/roboctl/roboctl-v1.0.0-linux-amd64.tar.gz
       tar -xvzf ./roboctl-v1.0.0-linux-amd64.tar.gz
       curl https://rclone.org/install.sh | sudo bash
       mkdir /home/runner/.config/rclone
       
    - name: roboctl and permission for linux
      run: |
       cp roboctl /usr/local/bin
       cd /usr/local/bin && chmod +x roboctl 
       echo "usr/local/bin" >> $GITHUB_PATH

    - name: repotopush
      run: mkdir repo
      
    - name: Add rclone.conf for linux
      run: 'echo "$CONF" >  /home/runner/.config/rclone/rclone.conf'
      shell: bash
      env:
        CONF: ${{secrets.RCLONE_CONF}}
      
    - name: Repo download
      run: rclone copy -P DO:robomotion-packages/contrib ./repo
      
    - name: Directory permission
      run: sudo chmod 777 -R  /home/runner/work/packages-contrib/packages-contrib/repo
        
    - name: roboctl index
      run: cd repo && roboctl repo index
      
    - name: repo upload
      run: rclone sync -P --s3-acl=public-read ./repo DO:robomotion-packages/contrib